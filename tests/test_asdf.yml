---
- name: Test asdf installation and versions
  hosts: all
  roles:
    - ansible_role_shirasagi
  tasks:
    - name: Check if asdf is installed
      ansible.builtin.stat:
        path: ~/.asdf
      register: asdf_installed

    - name: Install asdf if not installed
      ansible.builtin.git:
        repo: "https://github.com/asdf-vm/asdf.git"
        dest: ~/.asdf
        version: "{{ asdf_version }}"
      when: not asdf_installed.stat.exists

    - name: Source asdf in current session for root user
      ansible.builtin.shell: |
        . /root/.asdf/asdf.sh && asdf --version
      register: asdf_version_check
      become: true
      changed_when: false

    - name: Ensure asdf is installed
      assert:
        that:
          - asdf_version_check.rc == 0

    - name: Check Ruby version only if asdf is installed
      ansible.builtin.shell: |
        . ~/.asdf/asdf.sh && asdf current ruby
      register: ruby_version_check
      when: asdf_version_check.rc == 0

    - name: Debug Ruby version from asdf
      debug:
        msg: "Ruby version from asdf: {{ ruby_version_check.stdout.split()[1] }}"

    - name: Debug expected Ruby version from vars
      debug:
        msg: "Expected Ruby version: {{ ruby_version }}"

    - name: Ensure Ruby version matches the default version
      ansible.builtin.assert:
        that:
          - ruby_version_check.stdout.split()[1] == ruby_version
      failed_when: ruby_version_check.stdout.split()[1] != ruby_version

    - name: Check Node.js version only if asdf is installed
      ansible.builtin.shell: |
        . ~/.asdf/asdf.sh && asdf current nodejs
      register: nodejs_version_check
      when: asdf_version_check.rc == 0

    - name: Ensure Node.js version matches the default version
      ansible.builtin.assert:
        that:
          - nodejs_version_check.stdout.split()[1] == nodejs_version
      failed_when: nodejs_version_check.stdout.split()[1] != nodejs_version

    - name: Check Yarn version only if asdf is installed
      ansible.builtin.shell: |
        . ~/.asdf/asdf.sh && asdf current yarn
      register: yarn_version_check
      when: asdf_version_check.rc == 0

    - name: Ensure Yarn version matches the default version
      ansible.builtin.assert:
        that:
          - yarn_version_check.stdout.split()[1] == yarn_version
      failed_when: yarn_version_check.stdout.split()[1] != yarn_version
